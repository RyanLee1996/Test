<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <!--Action交给Spring来管理-->
    <!--配置struts2 action-->
    <!--<bean id="demoAction" class="team.singledog.struts.action.DemoAction" scope="prototype">-->
        <!--<property name="demoService" ref="demoService"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash;配置Service层的类&ndash;&gt;-->
    <!--<bean id="demoService" class="team.singledog.service.DemoService">-->
        <!--<property name="demoDAO" ref="demoDAO"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash;配置Dao层的类&ndash;&gt;-->
    <!--<bean id="demoDAO" class="team.singledog.hibernate.dao.DemoDAOImpl">-->
        <!--<property name="ht" ref="hibernateTemplate"/>-->
    <!--</bean>-->
    <context:component-scan base-package="ryan.test" />
    <!--创建HibernateTemplate对象-->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <!--注入sessionFactory-->
        <!--<property name="checkWriteOperations" value="false"/>-->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- 配置druid连接池 -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/frame?useSSL=false" />
        <property name="username" value="root" />
        <property name="password" value="123456" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <!--<property name="poolPreparedStatements" value="true" />-->
        <!--<property name="maxOpenPreparedStatements" value="20" />-->
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="3" />
        <property name="minIdle" value="3" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 1" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 配置监控统计拦截的filters -->
        <!--<property name="filters" value="stat" />-->
    </bean>
    <!-- 配置Hibernate的SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="druidDataSource" />
        <!--引入hibernate配置-->
        <property name="configLocation" value="classpath:./hibernate.cfg.xml"/>
        <!--引入hbm.xml文件-->
        <property name="mappingLocations" value="classpath:xml/*.hbm.xml"/>
    </bean>

    <bean id="sku" class="ryan.test.OrderSkuTest">
        <!--注入sessionFactory-->
        <property name="hibernateTemplate" ref="hibernateTemplate"/>
    </bean>


    <!--开启事务注解-->
    <tx:annotation-driven/>
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <!-- 注入SessionFactory -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:advice id="txAdvice2" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="do*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="save*" rollback-for="Exception" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="mod*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="ins*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="upd*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="invoke" propagation="REQUIRES_NEW" rollback-for="Exception" />
            <tx:method name="*" propagation="SUPPORTS" read-only="true" />
        </tx:attributes>
    </tx:advice>


</beans>